'''
列表
创建列表: 使用中阔号将所有准备放进列表中的元素包裹起来, 不同元素之间使用逗号分隔
同一个列表中可以包含不同的数据类型

序列
字符串是一个序列, 列表也是一个序列
可以使用for循环来访问序列中的每一个元素, 访问序列中的某一个元素可以使用方括号; 这叫做下标
比如: s = [1, 2, 3, 4, 5, 6, '7', 8, '9', '10', '上山打老虎']
s[0]    代表s的第1个元素 1
s[1]    代表s的第2个元素 2
s[2]    代表s的第3个元素 3

再比如: a = '一二三四五', '上山打老虎', '老虎打不着', '打到小松鼠' 
a[0]    代表a的第1个元素 '一二三四五'
a[1]    代表a的第2个元素 '上山打老虎'
a[2]    代表a的第3个元素 '老虎打不着'
下标索引序列的最后一个元素可以用 [-1], 第二个使用[-2]

列表切片

元素[:]
例如: s = [1,2,3,4,5,6]
s = [1, 2, 3, 4, 5, 6, '7', 8, '9', '10', '上山打老虎']

print(s[0:4])
print(s[3:7])
print(s[:3])
print(s[:-3])
print(s[3:])
print(s[:])
print(s[2:8:2])
print(s[::3])
print(s[::-2])

#倒序输出
print(s[::-1])
a = 'Hello,jary'
print(a[::-1])



列表的各种方法
增
list.append() ------- 往列表末尾添加一个元素, 这个元素可以是一个可迭代对象(列表或字符串), 也可以是一个数字 
list.extend() ------- 往列表末尾添加多个元素, 如果添加的是一个字符串, 那么就会把这个字符串拆成一个个列表添加进去, 如果添加的是一个列表, 则会将列表内的元素拼接加到列表末尾
list.insert() ------- insert方法有两个参数, 第一个指定添加列表中的位置, 第二个指定添加的元素 list.inert(3, '哈哈哈'), 添加对象可以是字符串, 也可以是一个列表

删
list.remove() ------- 删除列表中的指定元素, 每次只能删除一个 list.remove(xxxxx)
list.pop() ------- 弹出列表中指定的元素, 参数为改元素的下表, 返回这个被弹出的元素 list.pop(1)
list.clear() ------- 清空整个列表

改
list[4] = [xxx] -------   使用列表切片的方法, 索引列表中某个元素的下表, 给该元素重新赋值, 修改该元素的值
list[3:] = [xxx, yyy, zzz]  使用切片的方法将列表中下标为3以后的全部元素替换为新的元素

查
list[x] -------  查找列表中下标为 x 元素的值
list[x:y] -------查找列表中标为 x:y 中元素的值

排序
list.sort
n = [3, 6, 4, 1, 0, 5, 7]  --------使用list.sort()方法将列表中的元素按照从小到大进行排序, 列表里面可以是数字, 也可以是字符串
list.sort(reverse = True)  --------sort方法使用参数reverse = True, 相当于将执行list.sort()后执行list.reverse(), 这样就可以实现列表中的元素按照从大到小进行排序

list.reverse
n = [3, 6, 4, 1, 0, 5, 7]  --------使用list.reverse()方法将列表中的元素原地进行反转, 相当于从右往左把下标顺序重新进行排列

查找列表中元素的个数
list.count(x) ------- 使用list.count(x)方法查找list中有几个x, 返回x的数量

查找列表中某个元素的下标位置
list.index(x) ------- 使用list.index(x)方法查找 x 在list中的下标值, 如果列表中有多个的话会返回第一个
list.index(x, start, end) ------- 使用list的index(x, start, end)方法, 查找从起始位置到结束位置中x的下标值, 包含end

复制
list.copy()
s = list.copy()  ------- 将list重新拷贝一份, 到s中

'''